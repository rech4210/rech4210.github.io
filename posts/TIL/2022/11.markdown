---
layout: post
title: 11월 기록
tags : TIL
---
## 11월 xx일
### **hi**<br>
<br>

## 11월 16일
### **데이터셋을 만들때 구조체와 클래스의 차이** <br>

항상 궁금했다.<br>
구조체와 클래스의 근본적인 차이는 **value** 타입과 __reference__ 타입이라고 한다.<br>
그러면 데이터셋을 만들고 이를 처리할때 상속을 제외하고는 무슨 근본적인 차이가 있는가?<br>

대략적으로 찾아본 결과.<br><br>
![구조체vs클래스](https://user-images.githubusercontent.com/65288322/201966151-57a32406-67c5-4677-9f05-e93a286bd069.png)

구조체 사용 경우를 정리하자면 이렇다.<br>
- 구조체의 목적이 간단한 캡슐화를 지향할 때. (변경이 적거나 없을 경우)<br>
- 구조체 인스턴스가 값 복사를 기준으로 할 때. (참조에 의해 값이 바뀌는걸 피할 때)<br>
- 상속이 필요없는 경우<br>
- 박싱 언박싱이 잘 발생하지 않을 경우.<br>
- 저장하려는 데이터 양이 크지 않을 경우.<br>

반면, 사용하지 말아야 할 경우는..<br>
- 구조체 내부에 레퍼런스 타입의 변수를 사용할때.<br>
- 값이 자주 바뀌는 경우(대입).<br>
- 상속이 필요한 경우.<br>

구조체는 스택 영역에 생성된다 -> call by value 값 복사 <br>
클래스는 힙 영역에 생성된다. - > call by reference 값 참조 <br>

또 한 가지로 클래스 타입에 구조체 변수가 들어가면 데이터는 어떻게 저장될까?<br>

결론적으로, 클래스 개체에 들어가는 구조체 객체는 힙 영역에 들어간다. <br>

구조체 a가 있다.<br>
```
a의 인스턴스 -> List<a> a_List = new List<a>();
```
이러면 a 구조체의 변수가 리스트에 들어가 스택이 아닌 힙 영역에 들어가진다.<br>
또한 vector, color 같은 타입은 구조체를 사용한다. 그렇기에 이러한 데이터 타입은 구조체로 캐싱하면 유리하다.<br>

but 구조체 내부의 변수에 레퍼런스 타입을 쓸 경우 반드시 클래스를 이용하자.<br>
**복사를 기준으로 하는 값 타입 (구조체)의 정의에 어긋난다.**
